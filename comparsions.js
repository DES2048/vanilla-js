'use strict'
// Операции сравнения

//  в результате операций сравнения возвр логический тип
var a = 5, b = 3;
console.log("a<b",a<b)

// набор операций сравнения стандартный

// Строки сравнниваниются лексикографически, это значит:
// Сравнение идет по-символьно, до того символа, который не разрешит сравнение, 
// отсутствие символа трактуется как пустое место

//  true - так как первый же символ больше
console.log("k > false", "k" > "false")

// false - так как символ a больше чем пустое место
console.log("oleg > olega", "oleg" > "olega")

// при сравнении разных типов используется приведение к числу
console.log("'2' > 1", '2' > 1) // true '2' успешно преобр к 2
console.log("true == 1", true ==1) // true, true преобр к 1, а 1 == 1

// выше мы использовали т.н. нестрогое равенство, или равенство без проверки типа
// те же сравнения но со строгим равенством ===, дадут уже другие результаты
console.log("===")
console.log("'1' === 1", '1' === 1) // false так как типы разные

// сравнение со сппециальными значениями, тут довольно весело и нужно помнить следующее
// null и undefined равны только между собой и ничему другому,
// поэтому
console.log("null == null", null == null) // true
console.log("null == 0", null == 0) // false, так ка смотри выше
console.log("null == undefined", null == undefined);

// так как для null и undefined прописано правило для оператора ==, то при остальных операциях 
// сравнения происходит числовое перобразование
console.log("null < 1", null<1) // true, т.к null->0 , a 0<1
console.log('null+5 == 5', null+5 == 5) // true, т.к null->0, а 0+5 == 5
console.log("null != 0:", null != 0); // true, так как числового преоб не происходит

// это имееет забаное следствие,
console.log("null > 0:", null > 0); // false, null-> 0, 0 > 0: false
console.log("null == 0:", null == 0); // false так как null равне только null и undefined
// отсюда имеем что null раздельно не равен и не больше 0
// НО!
console.log("null >= 0:", null >= 0); // true! т.к. здесь уже исп числовое преобр а 0>=0:true 

// undefined сравнить вообще с чем то невозможно, тк undefined -> NaN, а NaN везде false
console.log("undefined == 0", undefined == 0);
console.log("undefined >= 0", undefined >= 0);

/// !!! вобщем любые сравнения с спец типами кроме === и !== следует исп очень осторожно

